{"version":3,"sources":["constants/default.ts","context/WalletConnectContext.tsx","components/Peer.tsx","components/DefaultCard.tsx","components/RequestCard.tsx","context/AccountContext.tsx","components/ProposalCard.tsx","components/icon/LogoutIcon.tsx","helpers/FileHelper.ts","components/Header.tsx","components/AccountEntry.tsx","components/Scanner.tsx","components/ConnectDapp.tsx","helpers/N3Helper.ts","App.tsx","index.tsx"],"names":["DEFAULT_AUTOACCEPT_METHODS","DEFAULT_NETWORKS","url","name","DEFAULT_NAMESPACES","accounts","methods","events","WalletConnectContext","React","createContext","WalletConnectContextProvider","options","children","useState","undefined","signClient","setSignClient","sessionProposals","setSessionProposals","initialized","setInitialized","sessions","setSessions","requests","setRequests","onRequestCallback","setOnRequestCallback","autoAcceptCallback","setAutoAcceptCallback","init","useCallback","a","SignClient","useEffect","loadSessions","Error","session","values","onRequestListener","listener","autoAcceptIntercept","findSessionByTopic","topic","find","JSON","stringify","makeRequest","requestEvent","foundSession","ns","Object","namespaces","acc","split","namespace","reference","address","chainId","respondRequest","response","respond","subscribeToEvents","removeAllListeners","on","proposal","old","addr","filter","i","id","formatJsonRpcError","message","onURI","data","uri","pair","getPeerOfRequest","get","peer","approveSession","accountsAndChains","namespacesWithoutAccounts","map","chain","keys","reduce","result","key","approve","acknowledged","rejectSession","reject","reason","code","disconnect","removeFromPending","x","approveRequest","rejectRequest","contextValue","Provider","value","useWalletConnect","useContext","Peer","props","h","w","src","metadata","icons","alt","direction","ml","fontSize","color","overflowY","description","href","target","MotionLink","motion","forwardRef","ref","DefaultCard","walletConnectCtx","openConnectingDapp","openRequest","dividerProps","align","bg","borderRadius","mt","_hover","onClick","fontWeight","boxShadow","p","my","flex","Delete","px","py","borderColor","borderWidth","bgClip","cursor","mx","animate","scale","transition","repeat","Infinity","repeatType","as","params","request","method","RequestCard","setPeer","sendingResponse","setSendingResponse","then","closeRequest","items","Array","isArray","invocations","overflow","pt","textAlign","toString","borderLeft","pl","k","title","alignSelf","position","bottom","AccountContext","AccountContextProvider","accountPassword","setAccountPassword","accountDecripted","setAccountDecripted","networkType","setNetworkType","privateRpcAddress","setPrivateRpcAddress","account","setAccount","useAccountContext","ProposalCard","accountCtx","firstProposal","length","proposer","requiredNamespaces","LogoutIcon","viewBox","fill","d","FileHelper","file","Promise","resolve","reader","FileReader","onload","readAsArrayBuffer","this","fileOrBlobToArrBuffer","blob","readAsDataURL","img","Image","canvas","toBlob","dataURI","byteString","indexOf","atob","unescape","mimeString","ia","Uint8Array","charCodeAt","Blob","type","urlToBlob","fileToUrl","urlToImg","includes","arrayBuffer","window","URL","webkitURL","createObjectURL","arrayBufferToBlob","blobToUrl","accept","multiple","input","document","createElement","setAttribute","body","appendChild","onchange","e","removeChild","files","click","promptForMultipleFiles","obj","dataStr","encodeURIComponent","downloadAnchorNode","remove","chainMeta","Header","logout","exportAccount","json","export","downloadJsonFile","isLoggedIn","bgColor","borderBottom","textTransform","mr","width","slice","ellipseAddress","boxSize","AccountEntry","toast","useToast","choseNetwork","setChoseNetwork","creatingNew","setCreatingNew","loading","setLoading","loadAccountFromStorage","str","localStorage","getItem","parse","wallet","Account","login","preventDefault","passwordOnAccount","decrypt","status","duration","isClosable","encrypt","console","log","setItem","importAccount","promptForSingleFile","text","createAccount","onSubmit","onChange","_placeholder","placeholder","SScannerContainer","styled","div","SScannerWrapper","SCloseButton","SFirstLine","SSecondLine","Scanner","state","delay","stopRecording","setState","handleScan","onValidate","error","onScan","handleError","onError","onClose","style","ConnectDapp","scanner","setScanner","handleInput","onScannerScan","handleUnhandledRejection","event","addEventListener","removeEventListener","maxW","res","N3Helper","rpcAddress","networkMagic","rpcCall","sessionRequest","invokeFunction","testInvoke","signMessage","verifyMessage","rpc","RPCClient","getApplicationLog","jsonrpc","cim","sb","Neon","create","scriptBuilder","forEach","c","emitContractCall","scriptHash","operation","args","convertParams","abortOnFail","emit","script","build","invokeScript","u","HexString","fromHex","buildMultipleSigner","signers","rpcClient","getBlockCount","currentHeight","trx","tx","Transaction","validUntilBlock","experimental","txHelpers","addFees","sign","sendRawTransaction","signMessageLegacy","version","signMessageNew","salt","randomBytes","parameterHexString","str2hexstring","lengthHex","num2VarInt","messageHex","publicKey","privateKey","verifyArgs","verify","sc","ContractParam","hash160","array","signerEntry","signer","Signer","scopes","WitnessScope","CalledByEntry","allowedContracts","ac","allowedGroups","s","buildSigner","App","connectingApp","setConnectingApp","requestOpen","setRequestOpen","req","minH","bgImage","getMagicOfRpcAddress","execute","query","resp","protocol","network","wcOptions","appMetadata","logger","relayServer","projectId","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.4284ef32.chunk.js","sourcesContent":["import {SessionTypes} from \"@walletconnect/types\";\n\nexport const DEFAULT_RELAY_PROVIDER = \"wss://relay.walletconnect.com\";\n\nexport const DEFAULT_PROJECT_ID = '56de852a69580b46d61b53f7b3922ce1';\n\nexport const DEFAULT_METHODS = [\n  \"invokeFunction\",\n  \"testInvoke\",\n  \"signMessage\",\n  \"verifyMessage\",\n  \"getapplicationlog\",\n  \"getrawmempool\",\n  \"getcontractstate\",\n  \"findstates\"\n];\nexport const DEFAULT_AUTOACCEPT_METHODS = [\n  \"testInvoke\",\n  \"verifyMessage\",\n  \"getapplicationlog\",\n  \"getrawmempool\",\n  \"getcontractstate\",\n  \"findstates\"\n];\n\nexport const DEFAULT_LOGGER = \"error\";\n\nexport const DEFAULT_APP_METADATA = {\n  name: \"CoZ Wallet Prototype\",\n  description: \"WalletConnect integration Prototype\",\n  url: \"https://coz.io/\",\n  icons: [\"https://raw.githubusercontent.com/CityOfZion/visual-identity/develop/_CoZ%20Branding/_Logo/_Logo%20icon/_PNG%20200x178px/CoZ_Icon_DARKBLUE_200x178px.png\"],\n};\n\nexport const DEFAULT_CHAIN = 'neo3:testnet'\nexport const DEFAULT_NETWORKS = {\n  \"neo3:testnet\": { url: \"https://testnet1.neo.coz.io:443\", name: 'Testnet' },\n  'neo3:mainnet': { url: \"http://seed1.neo.org:10332\", name: 'Mainnet' },\n  'neo3:private': { url: null, name: 'Private Network' }\n}\nexport const DEFAULT_BLOCKCHAINS = ['neo3'] as const\nexport const DEFAULT_NAMESPACES: SessionTypes.Namespaces = {\n  [DEFAULT_BLOCKCHAINS[0]]: {\n    accounts: [], // will be overridden\n    methods: [...DEFAULT_METHODS],\n    events: []\n  }\n}\n","import {\n  formatJsonRpcError,\n  JsonRpcResponse,\n} from '@json-rpc-tools/utils'\nimport SignClient from '@walletconnect/sign-client'\nimport {SignClientTypes, SessionTypes} from \"@walletconnect/types\";\nimport PropTypes from 'prop-types'\nimport React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from 'react'\n\nexport type OnRequestCallback = (\n  accountAddress: string,\n  chainId: string,\n  request: SessionRequest\n) => Promise<JsonRpcResponse>\nexport type AutoAcceptCallback = (\n  accountAddress: string | undefined,\n  chainId: string | undefined,\n  request: SessionRequest\n) => boolean\nexport type SessionProposal = SignClientTypes.EventArguments[\"session_proposal\"]\nexport type SessionRequest = SignClientTypes.EventArguments[\"session_request\"]\nexport type PeerOfRequest = {publicKey: string, metadata: SignClientTypes.Metadata}\nexport type AddressAndChain = {\n  address: string\n  chain: string\n}\n\ninterface IWalletConnectContext {\n  signClient: SignClient | undefined\n  sessionProposals: SessionProposal[]\n  initialized: boolean\n  sessions: SessionTypes.Struct[]\n  setSessions: React.Dispatch<React.SetStateAction<SessionTypes.Struct[]>>\n  requests: SessionRequest[]\n  init: () => Promise<void>\n  onURI: (data: any) => Promise<void>\n  getPeerOfRequest: (\n    requestEvent: SessionRequest\n  ) => Promise<PeerOfRequest>\n  approveSession: (\n    proposal: SessionProposal,\n    accountsAndChains: AddressAndChain[],\n    namespacesWithoutAccounts: SessionTypes.Namespaces\n  ) => Promise<void>\n  rejectSession: (proposal: SessionProposal) => Promise<void>\n  disconnect: (topic: string) => Promise<void>\n  approveRequest: (\n    requestEvent: SessionRequest\n  ) => Promise<JsonRpcResponse | null>\n  rejectRequest: (requestEvent: SessionRequest) => Promise<void>\n  onRequestListener: (listener: OnRequestCallback) => void\n  autoAcceptIntercept: (listener: AutoAcceptCallback) => void\n}\n\nexport const WalletConnectContext = React.createContext(\n  {} as IWalletConnectContext\n)\n\nexport const WalletConnectContextProvider: React.FC<{\n  options: SignClientTypes.Options\n  children: any\n}> = ({options, children}) => {\n  const [signClient, setSignClient] = useState<SignClient | undefined>(undefined)\n  const [sessionProposals, setSessionProposals] = useState<\n      SessionProposal[]\n    >([])\n  const [initialized, setInitialized] = useState<boolean>(false)\n  const [sessions, setSessions] = useState<SessionTypes.Struct[]>([])\n  const [requests, setRequests] = useState<SessionRequest[]>([])\n  const [onRequestCallback, setOnRequestCallback] = useState<\n    OnRequestCallback | undefined\n    >(undefined)\n  const [autoAcceptCallback, setAutoAcceptCallback] = useState<\n    AutoAcceptCallback | undefined\n    >(undefined)\n\n  const init = useCallback(async () => {\n    setSignClient(\n      await SignClient.init(options)\n    )\n  }, [])\n\n  useEffect(() => {\n    init()\n  }, [init])\n\n  const loadSessions = useCallback(async () => {\n    if (!signClient) {\n      throw new Error('Client is not initialized')\n    }\n    setSessions(signClient.session.values)\n    setInitialized(true)\n  }, [signClient])\n\n  // ---- MAKE REQUESTS AND SAVE/CHECK IF APPROVED ------------------------------//\n\n  const onRequestListener = useCallback((listener: OnRequestCallback) => {\n    setOnRequestCallback(() => listener)\n  }, [])\n\n  const autoAcceptIntercept = useCallback((listener: AutoAcceptCallback) => {\n    setAutoAcceptCallback(() => listener)\n  }, [])\n\n  const findSessionByTopic = useCallback(\n      (topic: string) => {\n        return sessions.find((session) => session.topic === topic)\n      },\n      [JSON.stringify(sessions)]\n  )\n\n  const makeRequest = useCallback(\n    async (requestEvent: SessionRequest) => {\n      const foundSession = findSessionByTopic(requestEvent.topic)\n      const ns = Object.values(foundSession?.namespaces ?? [])[0]\n      const acc = ns?.accounts[0]\n      if (!acc) {\n        throw new Error('There is no Account')\n      }\n      const [namespace, reference, address] = acc?.split(':')\n      const chainId = `${namespace}:${reference}`\n      if (!onRequestCallback) {\n        throw new Error('There is no onRequestCallback')\n      }\n      return await onRequestCallback(address, chainId, requestEvent)\n    },\n    [findSessionByTopic]\n  )\n\n  const respondRequest = useCallback(\n    async (topic: string, response: JsonRpcResponse) => {\n      if (!signClient) {\n        throw new Error('Client is not initialized')\n      }\n      await signClient.respond({topic, response})\n    },\n    [signClient]\n  )\n\n  const subscribeToEvents = useCallback(() => {\n    if (!signClient) {\n      throw new Error('Client is not initialized')\n    }\n\n    signClient.events.removeAllListeners()\n\n    signClient.on(\"session_proposal\", (proposal: SessionProposal) => {\n        setSessionProposals((old) => [...old, proposal])\n    })\n\n    signClient.on('session_request', async (requestEvent: SessionRequest) => {\n        try {\n          if (autoAcceptCallback) {\n            let address: string | undefined = undefined\n            let chainId: string | undefined = undefined\n            const foundSession = findSessionByTopic(requestEvent.topic)\n            const ns = Object.values(foundSession?.namespaces ?? [])[0]\n            const acc = ns?.accounts[0]\n            if (acc) {\n              const [namespace, reference, addr] = acc.split(':')\n              address = addr\n              chainId = `${namespace}:${reference}`\n            }\n            const autoAccepted = autoAcceptCallback(\n              address,\n              chainId,\n              requestEvent\n            )\n            if (autoAccepted) {\n              const response = await makeRequest(requestEvent)\n              await respondRequest(requestEvent.topic, response)\n              return\n            }\n          }\n\n          setRequests((old) => [...old.filter((i) => i.id !== requestEvent.id), requestEvent])\n        } catch (e) {\n          const response = formatJsonRpcError(requestEvent.id, (e as any).message)\n          await respondRequest(requestEvent.topic, response)\n        }\n      }\n    )\n\n    signClient.on('session_delete', () => {\n      if (!signClient) {\n        throw new Error('Client is not initialized')\n      }\n      setSessions(signClient.session.values)\n    })\n  }, [\n    makeRequest,\n    respondRequest,\n    signClient,\n    findSessionByTopic\n  ])\n\n  useEffect(() => {\n    if (signClient) {\n      subscribeToEvents()\n      loadSessions()\n    }\n  }, [signClient, subscribeToEvents, loadSessions])\n\n  const onURI = async (data: any) => {\n    try {\n      const uri = typeof data === 'string' ? data : ''\n      if (!uri) return\n      if (!signClient) {\n        throw new Error('Client is not initialized')\n      }\n\n      await signClient.pair({uri})\n    } catch (error) {\n      throw new Error('client Pair Error')\n    }\n  } // this should not be a callback because it would require the developer to put it as dependency\n\n  const getPeerOfRequest = async (requestEvent: SessionRequest) => {\n    if (!signClient) {\n      throw new Error('Client is not initialized')\n    }\n    const {peer} = await signClient.session.get(requestEvent.topic)\n    return peer\n  } // this should not be a callback because it would require the developer to put it as dependency\n\n  const approveSession = async (\n    proposal: SessionProposal,\n    accountsAndChains: AddressAndChain[],\n    namespacesWithoutAccounts: SessionTypes.Namespaces\n  ) => {\n    if (!signClient) {\n      throw new Error('Client is not initialized')\n    }\n    if (typeof accountsAndChains === 'undefined') {\n      throw new Error('Accounts is undefined')\n    }\n    const accounts = accountsAndChains.map((acc) => `${acc.chain}:${acc.address}`)\n\n    const namespaces: SessionTypes.Namespaces = Object.keys(namespacesWithoutAccounts).reduce((result, key) => {\n      result[key] = {...namespacesWithoutAccounts[key], accounts}\n      return result\n    }, {})\n\n    const { acknowledged } = await signClient.approve({\n      id: proposal.id,\n      namespaces\n    })\n\n    const session = await acknowledged()\n\n    setSessionProposals((old) => old.filter((i) => i !== proposal))\n    setSessions([session])\n  } // this should not be a callback because it would require the developer to put it as dependency\n\n  const rejectSession = async (proposal: SessionProposal) => {\n    if (!signClient) {\n      throw new Error('Client is not initialized')\n    }\n    await signClient.reject({\n      id: proposal.id,\n      reason: {\n        code: 1,\n        message: 'rejected by the user'\n      }\n    })\n    setSessionProposals((old) => old.filter((i) => i !== proposal))\n  } // this should not be a callback because it would require the developer to put it as dependency\n\n  const disconnect = async (topic: string) => {\n    if (!signClient) {\n      throw new Error('Client is not initialized')\n    }\n    await signClient.disconnect({\n      topic,\n      reason: { code: 5900, message: 'USER_DISCONNECTED' },\n    })\n\n    setSessions(signClient.session.values)\n  } // this should not be a callback because it would require the developer to put it as dependency\n\n  const removeFromPending = useCallback(async (requestEvent: SessionRequest) => {\n    setRequests(\n      requests.filter((x) => x.id !== requestEvent.id)\n    )\n  }, [])\n\n  const approveRequest = async (requestEvent: SessionRequest) => {\n    if (!signClient) {\n      throw new Error('Client is not initialized')\n    }\n    try {\n      const response = await makeRequest(requestEvent)\n      await signClient.respond({\n        topic: requestEvent.topic,\n        response,\n      })\n      await removeFromPending(requestEvent)\n      return response\n    } catch (error) {\n      await signClient.respond({\n        topic: requestEvent.topic,\n        response: formatJsonRpcError(\n          requestEvent.id,\n          'Failed or Rejected Request'\n        ),\n      })\n      throw error\n    }\n  } // this should not be a callback because it would require the developer to put it as dependency\n\n  const rejectRequest = async (requestEvent: SessionRequest) => {\n    if (!signClient) {\n      throw new Error('Client is not initialized')\n    }\n    await signClient.respond({\n      topic: requestEvent.topic,\n      response: formatJsonRpcError(\n        requestEvent.id,\n        'Failed or Rejected Request'\n      ),\n    })\n    await removeFromPending(requestEvent)\n  } // this should not be a callback because it would require the developer to put it as dependency\n\n  const contextValue: IWalletConnectContext = {\n    signClient,\n    sessionProposals,\n    initialized,\n    sessions,\n    setSessions,\n    requests,\n\n    init,\n    onURI,\n    getPeerOfRequest,\n    approveSession,\n    rejectSession,\n    disconnect,\n    approveRequest,\n    rejectRequest,\n    onRequestListener,\n    autoAcceptIntercept,\n  }\n\n  return (\n    <WalletConnectContext.Provider value={contextValue}>\n      {children}\n    </WalletConnectContext.Provider>\n  )\n}\n\nexport const useWalletConnect = (): IWalletConnectContext =>\n  useContext(WalletConnectContext)\n\nWalletConnectContextProvider.propTypes = {\n  options: PropTypes.any.isRequired,\n  children: PropTypes.any.isRequired,\n}\n","import * as React from \"react\";\nimport {SignClientTypes} from \"@walletconnect/types\";\nimport {Flex, Image, Text, Link, Spacer, DividerProps} from \"@chakra-ui/react\";\n\nexport default function Peer(props: { metadata: SignClientTypes.Metadata } & DividerProps): any {\n  return (\n    <Flex h=\"5rem\" {...props}>\n      <Image w=\"5rem\" src={props.metadata.icons[0]} alt={props.metadata.name} />\n      <Flex direction=\"column\" ml=\"1rem\" h=\"100%\">\n        <Text fontSize=\"1.5rem\">{props.metadata.name}</Text>\n        <Text fontSize=\"0.875rem\" color=\"#888888\" overflowY=\"hidden\">{props.metadata.description}</Text>\n        <Spacer/>\n        <Link href={props.metadata.url} target=\"_blank\" fontSize=\"0.875rem\" color=\"#888888\">{props.metadata.url}</Link>\n      </Flex>\n    </Flex>\n  )\n}\n","import * as React from \"react\";\nimport {motion, MotionProps} from \"framer-motion\";\n\nimport {\n  chakra,\n  Button,\n  ChakraProps,\n  ComponentWithAs,\n  DividerProps,\n  Flex,\n  forwardRef,\n  Spacer,\n  Text,\n  Link,\n} from \"@chakra-ui/react\";\nimport {SessionRequest, useWalletConnect} from \"../context/WalletConnectContext\";\nimport Peer from \"../components/Peer\";\nimport {DeleteIcon} from \"@chakra-ui/icons\";\n\nexport type MotionBoxProps = Omit<ChakraProps,\n  keyof MotionProps> &\n  MotionProps & {\n  as?: React.ElementType;\n};\n\nexport const MotionLink = motion(\n  forwardRef<ChakraProps, \"a\">((props, ref) => {\n    return <chakra.a ref={ref} {...props} />;\n  })\n) as ComponentWithAs<\"a\", MotionBoxProps>;\n\nexport default function DefaultCard(props: DividerProps & {\n  openConnectingDapp: () => any,\n  openRequest: (request: SessionRequest) => any\n}): any {\n  const walletConnectCtx = useWalletConnect()\n\n  const {openConnectingDapp, openRequest, ...dividerProps} = props\n\n  return (\n    <Flex direction=\"column\" align=\"center\" {...dividerProps}>\n      <Spacer/>\n      <Button h=\"2.75rem\" bg=\"#373d4a\" borderRadius={0} mt=\"1.5rem\"\n              _hover={{bg: 'black'}} onClick={openConnectingDapp}>Make a new Connection</Button>\n      <Spacer/>\n      <Text fontSize=\"0.875rem\" fontWeight=\"bold\" color=\"#888888\" mt=\"4rem\">{\"Sessions\"}</Text>\n      {walletConnectCtx.sessions.map(session => (\n        <Flex key={`s${session.topic}`} direction=\"column\" bg=\"#252b36\" w=\"23rem\" boxShadow=\"lg\" p=\"0.5rem\" my=\"0.5rem\">\n          <Flex>\n            <Peer key={session.topic} metadata={session.peer.metadata} flex={1}/>\n            <Link onClick={() => walletConnectCtx.disconnect(session.topic)}><DeleteIcon color=\"#990000\"/></Link>\n          </Flex>\n          {walletConnectCtx.requests.map(requestEvent => requestEvent.topic === session.topic && (\n              <MotionLink\n                key={`r${requestEvent.topic}`}\n                bg=\"black\" px=\"0.8rem\" py=\"0.4rem\" borderRadius=\"0.5rem\" borderColor=\"#00000033\" borderWidth=\"0.3rem\"\n                bgClip=\"padding-box\" cursor=\"pointer\"\n                mx=\"0.5rem\"\n                mt=\"1rem\"\n                animate={{scale: [1, 1.07, 1]}}\n                transition={{repeat: Infinity, repeatType: \"loop\",}}\n                onClick={() => openRequest(requestEvent)}\n              >\n                <Text as=\"span\" fontWeight=\"bold\">Pending Request:</Text> {requestEvent.params.request.method}\n              </MotionLink>\n            )\n          )}\n        </Flex>\n      ))}\n      <Spacer/>\n    </Flex>\n  );\n}\n","import * as React from \"react\";\n\nimport Peer from \"../components/Peer\";\nimport {Button, Spinner, DividerProps, Flex, Image, Spacer, Text, Box} from \"@chakra-ui/react\";\nimport {PeerOfRequest, SessionRequest, useWalletConnect} from \"../context/WalletConnectContext\";\nimport {useEffect, useState} from \"react\";\n\nexport default function RequestCard(props: DividerProps & {requestEvent: SessionRequest, closeRequest: () => void}): any {\n  const walletConnectCtx = useWalletConnect()\n  const [peer, setPeer] = useState<PeerOfRequest | undefined>(undefined)\n  const [sendingResponse, setSendingResponse] = useState(false)\n\n  const request = props.requestEvent.params.request\n\n  useEffect(() => {\n    walletConnectCtx.getPeerOfRequest(props.requestEvent).then(setPeer)\n  }, [props.requestEvent, walletConnectCtx])\n\n  const approve = async () => {\n    setSendingResponse(true)\n    await walletConnectCtx.approveRequest(props.requestEvent)\n    setSendingResponse(false)\n    props.closeRequest()\n  }\n\n  const reject = async () => {\n    setSendingResponse(true)\n    await walletConnectCtx.rejectRequest(props.requestEvent)\n    setSendingResponse(false)\n    props.closeRequest()\n  }\n\n  const items = Array.isArray(request.params) ? request.params\n    : (request.params.invocations ? request.params.invocations\n      : [request.params]\n    )\n\n  return (\n    <Flex direction=\"column\" align=\"center\" {...props}>\n      <Spacer/>\n      <Flex direction=\"column\" bg=\"#252b36\" w=\"23rem\" boxShadow=\"dark-lg\" p=\"0.5rem\">\n        {peer && <Peer metadata={peer.metadata} />}\n        <Flex direction=\"column\" bg=\"#00000022\" boxShadow=\"inset 0 2px 3px 0 #00000033\" mt=\"0.9rem\" p=\"0.7rem\"\n              overflow=\"hidden\">\n          <Text fontSize=\"0.875rem\" color=\"#888888\" fontWeight=\"bold\">Chains</Text>\n          <Flex align=\"center\" mt=\"0.5rem\">\n            <Image w=\"1.875rem\" src=\"https://cryptologos.cc/logos/neo-neo-logo.svg\"/>\n            <Text fontSize=\"0.875rem\" ml=\"0.5rem\">Neo3</Text>\n          </Flex>\n          <Text fontSize=\"0.875rem\" color=\"#888888\" fontWeight=\"bold\" mt=\"0.875rem\">Method</Text>\n          <Text fontSize=\"0.875rem\" mt=\"0.5rem\">{request.method}</Text>\n          <Text fontSize=\"0.875rem\" color=\"#888888\" fontWeight=\"bold\" mt=\"0.875rem\">Arguments</Text>\n          {items?.map((p: any, i: number) => (<>\n              <Flex key={i} mt=\"0.5rem\">\n                <Box h=\"1.75rem\" pt=\"0.08rem\" px={\"0.6rem\"} textAlign=\"center\" bg=\"#373d4a\" borderRadius=\"0.875rem\">\n                  {i.toString(10)}\n                </Box>\n                <Text ml=\"0.5rem\">\n                  {typeof p === 'object' ? '' : (typeof p === 'number' ? p + 1 : p.toString())}\n                </Text>\n              </Flex>\n              {typeof p === 'object' && (\n                <Flex direction=\"column\" borderLeft=\"solid 1px #373d4a\" ml=\"0.875rem\" pl=\"0.875rem\">\n                  {Object.keys(p).map((k: string) => (\n                    <Flex key={k} mt=\"0.5rem\">\n                      <Box h=\"1.75rem\" pt=\"0.08rem\" px={\"0.6rem\"} textAlign=\"center\" bg=\"#373d4a\" borderRadius=\"0.875rem\">\n                        {k}\n                      </Box>\n                      <Text ml=\"0.5rem\" title={p[k] && (typeof p[k] !== 'object' ? p[k].toString() : JSON.stringify(p[k]))}>\n                        {p[k] && (typeof p[k] !== 'object' ? p[k].toString() : JSON.stringify(p[k]))}\n                      </Text>\n                    </Flex>\n                  ))}\n                </Flex>\n              )}\n            </>)\n          )}\n        </Flex>\n        {sendingResponse ? <Spinner alignSelf=\"center\" /> : (\n        <Flex mt=\"0.75rem\" position=\"sticky\" bottom={0}>\n          <Button flex={1} onClick={approve}\n                  bg=\"black\" borderRadius={0} _hover={{bg: '#111'}}>\n            Approve\n          </Button>\n          <Button flex={1} onClick={reject}\n                  bg=\"black\" borderRadius={0} _hover={{bg: '#111'}} ml=\"0.5rem\">\n            Reject\n          </Button>\n        </Flex>\n        )}\n      </Flex>\n      <Spacer/>\n    </Flex>\n  );\n}\n","import React, {useContext, useState} from \"react\";\nimport {Account} from \"@cityofzion/neon-core/lib/wallet\";\nimport {DEFAULT_CHAIN} from \"../constants\";\n\ninterface IAccountContext {\n    accountPassword: string | undefined,\n    setAccountPassword: React.Dispatch<React.SetStateAction<string | undefined>>,\n    accountDecripted: boolean,\n    setAccountDecripted: React.Dispatch<React.SetStateAction<boolean>>,\n    privateRpcAddress: string,\n    setPrivateRpcAddress: React.Dispatch<React.SetStateAction<string>>,\n    networkType: string,\n    setNetworkType: React.Dispatch<React.SetStateAction<string>>,\n    account: Account | undefined,\n    setAccount: React.Dispatch<React.SetStateAction<Account | undefined>>,\n}\n\nexport const AccountContext = React.createContext({} as IAccountContext)\n\nexport const AccountContextProvider: React.FC = ({ children }) => {\n    const [accountPassword, setAccountPassword] = useState<string | undefined>(undefined)\n    const [accountDecripted, setAccountDecripted] = useState(false)\n    const [networkType, setNetworkType] = useState(DEFAULT_CHAIN)\n    const [privateRpcAddress, setPrivateRpcAddress] = useState<string>('http://localhost')\n    const [account, setAccount] = useState<Account | undefined>()\n\n    const contextValue: IAccountContext = {\n        accountPassword, setAccountPassword,\n        accountDecripted, setAccountDecripted,\n        networkType, setNetworkType,\n        privateRpcAddress, setPrivateRpcAddress,\n        account, setAccount,\n    }\n\n    return (\n        <AccountContext.Provider value={contextValue}>{children}</AccountContext.Provider>\n    );\n}\n\nexport const useAccountContext = (): IAccountContext => useContext(AccountContext)\n","import * as React from \"react\";\nimport Peer from \"../components/Peer\";\nimport {Button, DividerProps, Flex, Spacer, Text} from \"@chakra-ui/react\";\nimport {useWalletConnect} from \"../context/WalletConnectContext\";\nimport {useAccountContext} from \"../context/AccountContext\";\nimport {DEFAULT_NAMESPACES} from \"../constants\";\n\nexport default function ProposalCard(props: DividerProps): any {\n  const walletConnectCtx = useWalletConnect()\n  const accountCtx = useAccountContext()\n  const firstProposal = walletConnectCtx.sessionProposals[0]\n\n  const approveSession = async () => {\n    await walletConnectCtx.approveSession(firstProposal, [{\n      address: accountCtx.account?.address ?? '',\n      chain: accountCtx.networkType\n    }], DEFAULT_NAMESPACES)\n  }\n\n  return (\n    <Flex direction=\"column\" align=\"center\" {...props}>\n      <Spacer />\n      {!!walletConnectCtx.sessionProposals.length &&\n        <Flex direction=\"column\" bg=\"#252b36\" w=\"23rem\" boxShadow=\"dark-lg\" p=\"0.5rem\">\n          <Peer metadata={firstProposal.params.proposer.metadata} />\n          <Text as={'pre'} bg=\"#00000022\" boxShadow=\"inset 0 2px 3px 0 #00000033\" mt=\"0.9rem\" p=\"0.7rem\">\n            {JSON.stringify(firstProposal.params.requiredNamespaces, null, 2)}\n          </Text>\n          <Flex mt=\"0.75rem\">\n            <Button flex={1} onClick={approveSession}\n                    bg=\"black\" borderRadius={0} _hover={{bg: '#111'}}>\n              Approve\n            </Button>\n            <Button flex={1} onClick={() => walletConnectCtx.rejectSession(firstProposal)}\n                    bg=\"black\" borderRadius={0} _hover={{bg: '#111'}} ml=\"0.5rem\">\n              Reject\n            </Button>\n          </Flex>\n        </Flex>\n      }\n      <Spacer />\n    </Flex>\n  );\n}\n","import {Icon} from \"@chakra-ui/react\"\nimport {FunctionComponent} from \"react\";\n\nconst LogoutIcon: FunctionComponent<any> = (props: any) => (\n    <Icon viewBox=\"0 0 512.016 512\" {...props}>\n        <path fill=\"currentColor\"\n              d=\"m496 240.007812h-202.667969c-8.832031 0-16-7.167968-16-16 0-8.832031 7.167969-16 16-16h202.667969c8.832031 0 16 7.167969 16 16 0 8.832032-7.167969 16-16 16zm0 0\"/>\n        <path fill=\"currentColor\"\n            d=\"m416 320.007812c-4.097656 0-8.191406-1.558593-11.308594-4.691406-6.25-6.253906-6.25-16.386718 0-22.636718l68.695313-68.691407-68.695313-68.695312c-6.25-6.25-6.25-16.382813 0-22.632813 6.253906-6.253906 16.386719-6.253906 22.636719 0l80 80c6.25 6.25 6.25 16.382813 0 22.632813l-80 80c-3.136719 3.15625-7.230469 4.714843-11.328125 4.714843zm0 0\"/>\n        <path fill=\"currentColor\"\n            d=\"m170.667969 512.007812c-4.566407 0-8.898438-.640624-13.226563-1.984374l-128.386718-42.773438c-17.46875-6.101562-29.054688-22.378906-29.054688-40.574219v-384c0-23.53125 19.136719-42.6679685 42.667969-42.6679685 4.5625 0 8.894531.6406255 13.226562 1.9843755l128.382813 42.773437c17.472656 6.101563 29.054687 22.378906 29.054687 40.574219v384c0 23.53125-19.132812 42.667968-42.664062 42.667968zm-128-480c-5.867188 0-10.667969 4.800782-10.667969 10.667969v384c0 4.542969 3.050781 8.765625 7.402344 10.28125l127.785156 42.582031c.917969.296876 2.113281.46875 3.480469.46875 5.867187 0 10.664062-4.800781 10.664062-10.667968v-384c0-4.542969-3.050781-8.765625-7.402343-10.28125l-127.785157-42.582032c-.917969-.296874-2.113281-.46875-3.476562-.46875zm0 0\"/>\n        <path fill=\"currentColor\"\n            d=\"m325.332031 170.675781c-8.832031 0-16-7.167969-16-16v-96c0-14.699219-11.964843-26.667969-26.664062-26.667969h-240c-8.832031 0-16-7.167968-16-16 0-8.832031 7.167969-15.9999995 16-15.9999995h240c32.363281 0 58.664062 26.3046875 58.664062 58.6679685v96c0 8.832031-7.167969 16-16 16zm0 0\"/>\n        <path fill=\"currentColor\"\n            d=\"m282.667969 448.007812h-85.335938c-8.832031 0-16-7.167968-16-16 0-8.832031 7.167969-16 16-16h85.335938c14.699219 0 26.664062-11.96875 26.664062-26.667968v-96c0-8.832032 7.167969-16 16-16s16 7.167968 16 16v96c0 32.363281-26.300781 58.667968-58.664062 58.667968zm0 0\"/>\n    </Icon>\n);\n\nexport default LogoutIcon;","export abstract class FileHelper {\n  static fileOrBlobToArrBuffer(file: File | Blob): Promise<ArrayBuffer | null> {\n    return new Promise(resolve => {\n      const reader = new FileReader()\n      reader.onload = () => {\n        resolve(reader.result as ArrayBuffer)\n      }\n\n      reader.readAsArrayBuffer(file)\n    })\n  }\n\n  static async fileToArrBuffer(file: File): Promise<ArrayBuffer | null> {\n    return await this.fileOrBlobToArrBuffer(file)\n  }\n\n  static async blobToArrBuffer(blob: Blob): Promise<ArrayBuffer | null> {\n    return await this.fileOrBlobToArrBuffer(blob)\n  }\n\n  static fileToUrl(file: File | Blob): Promise<string> {\n    return new Promise(resolve => {\n      const reader = new FileReader()\n      reader.onload = () => {\n        resolve(reader.result as string)\n      }\n      reader.readAsDataURL(file)\n    })\n  }\n\n  static urlToImg(url: string): Promise<HTMLImageElement> {\n    return new Promise(resolve => {\n      const img = new Image()\n\n      img.onload = () => {\n        resolve(img)\n      }\n\n      img.src = url\n    })\n  }\n\n  static canvasToBlob(canvas: HTMLCanvasElement): Promise<Blob | null> {\n    return new Promise<Blob | null>(resolve => {\n      canvas.toBlob((blob: Blob | null) => {\n        resolve(blob)\n      })\n    })\n  }\n\n  static urlToBlob(dataURI: string): Blob {\n    let byteString: string\n    if (dataURI.split(',')[0].indexOf('base64') >= 0) {\n      byteString = atob(dataURI.split(',')[1])\n    } else {\n      byteString = unescape(dataURI.split(',')[1])\n    }\n\n    // separate out the mime component\n    const mimeString: string = dataURI\n      .split(',')[0]\n      .split(':')[1]\n      .split(';')[0]\n\n    // write the bytes of the string to a typed array\n    const ia = new Uint8Array(byteString.length)\n    for (let i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i)\n    }\n\n    return new Blob([ia], {type: mimeString})\n  }\n\n  static urlToArrayBuffer(dataURI: string): Promise<ArrayBuffer | null> {\n    const blob = this.urlToBlob(dataURI)\n    return this.fileOrBlobToArrBuffer(blob)\n  }\n\n  static async fileToImg(file: File | Blob): Promise<HTMLImageElement> {\n    const url = await this.fileToUrl(file)\n    return await this.urlToImg(url)\n  }\n\n  static fileOrBlobToExtension(file: Blob | File): string {\n    return file.type.includes('jpeg') ? 'jpg' : file.type.split('/')[1]\n  }\n\n  static arrayBufferToBlob(arrayBuffer: ArrayBuffer): Blob {\n    return new Blob([arrayBuffer], {type: 'image/jpeg'})\n  }\n\n  static blobToUrl(blob: Blob): string {\n    return (window.URL || window.webkitURL).createObjectURL(blob)\n  }\n\n  static arrayBufferToUrl(arrayBuffer: ArrayBuffer): string {\n    const blob = this.arrayBufferToBlob(arrayBuffer)\n    return this.blobToUrl(blob)\n  }\n\n  static promptForMultipleFiles(\n    accept: string | null = null,\n    multiple = true\n  ): Promise<File[] | null> {\n    return new Promise(resolve => {\n      const input = document.createElement('input')\n      input.type = 'file'\n      if (accept) {\n        input.accept = accept\n      }\n\n      if (multiple) {\n        input.setAttribute('multiple', 'multiple')\n      }\n\n      document.body.appendChild(input)\n\n      input.onchange = (e: any) => {\n        document.body.removeChild(input)\n        resolve(e.target.files)\n      }\n\n      input.click()\n    })\n  }\n\n  static async promptForSingleFile(\n    accept: string | null = null\n  ): Promise<File | null> {\n    const files: File[] | null = await this.promptForMultipleFiles(\n      accept,\n      false\n    )\n    if (!files || !files.length) {\n      return null\n    }\n    return files[0]\n  }\n\n  static downloadJsonFile(name: string, obj: unknown): void {\n    const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(obj));\n    const downloadAnchorNode = document.createElement('a');\n    downloadAnchorNode.setAttribute(\"href\",     dataStr);\n    downloadAnchorNode.setAttribute(\"download\", name + \".json\");\n    document.body.appendChild(downloadAnchorNode);\n    downloadAnchorNode.click();\n    downloadAnchorNode.remove();\n  }\n}\n","import * as React from \"react\";\nimport {Flex, Image, Link, Text} from \"@chakra-ui/react\";\n// import {useWalletConnect} from \"../context/WalletConnectContext\";\nimport LogoutIcon from \"./icon/LogoutIcon\";\nimport {FileHelper} from \"../helpers/FileHelper\";\nimport {useAccountContext} from \"../context/AccountContext\";\n\nconst chainMeta = {\n    name: 'Neo3',\n    logo: 'https://cryptologos.cc/logos/neo-neo-logo.svg',\n}\n\nexport default function Header(): any {\n    // const walletConnectCtx = useWalletConnect()\n    const accountCtx = useAccountContext()\n\n    const logout = async () => {\n        accountCtx.setAccountPassword(undefined)\n        accountCtx.setAccountDecripted(false)\n        // await walletConnectCtx.cleanConnections()\n    }\n\n    const ellipseAddress = (address = \"\", width = 10) => {\n        return `${address.slice(0, width)}...${address.slice(-width)}`;\n    }\n\n    const exportAccount = async () => {\n        const json = accountCtx.account?.export()\n        FileHelper.downloadJsonFile(accountCtx.account?.address ?? '', json)\n    }\n\n    const isLoggedIn = () => {\n        return accountCtx.account && accountCtx.accountDecripted\n    }\n\n    return (\n        <Flex align=\"center\" bgColor=\"#00000033\" borderBottom=\"1px\" borderColor=\"#ffffff33\" h={[\"3.5rem\", \"6rem\"]} px={[\"1rem\", \"3rem\"]}>\n            <Flex direction=\"column\" flex={1} align={isLoggedIn() ? 'start' : 'center'}>\n                <Text fontSize=\"2.25rem\" fontWeight=\"bold\">Web Wallet</Text>\n                <Text fontSize=\"0.875rem\" color=\"#888888\" textTransform=\"uppercase\" mt=\"-0.5rem\">For Tests</Text>\n            </Flex>\n            {isLoggedIn() && (\n                <Flex direction=\"column\" align=\"right\">\n                    {accountCtx.account &&\n                        <Flex\n                            key={accountCtx.account.address}\n                            align=\"center\"\n                        >\n                            <Image src={chainMeta.logo} alt={chainMeta.name} title={chainMeta.name} w=\"1.6rem\"\n                                   mr=\"0.5rem\"/>\n                            <Flex direction=\"column\">\n                                <Text fontSize=\"0.875rem\">{ellipseAddress(accountCtx.account.address, 8)}</Text>\n                                <Link fontSize=\"0.875rem\" mt=\"-0.3rem\" color=\"#888888\" onClick={exportAccount}>\n                                    Download JSON File\n                                </Link>\n                            </Flex>\n                            <Link ml=\"0.6rem\" onClick={logout}>\n                                <LogoutIcon boxSize=\"1.4rem\" color=\"#888888\"/>\n                            </Link>\n                        </Flex>}\n                </Flex>\n            )}\n        </Flex>\n    );\n}\n","import * as React from \"react\";\nimport {Box, Button, DividerProps, Flex, Image, Input, Select, Spacer, Spinner, Text, useToast} from \"@chakra-ui/react\";\nimport {FileHelper} from \"../helpers/FileHelper\";\nimport {wallet} from \"@cityofzion/neon-js\";\nimport {useCallback, useEffect, useState} from \"react\";\nimport {Account, AccountJSON} from \"@cityofzion/neon-core/lib/wallet/Account\";\nimport {useAccountContext} from \"../context/AccountContext\";\nimport {DEFAULT_NETWORKS} from \"../constants\";\n\nexport default function AccountEntry(props: DividerProps): any {\n    const accountCtx = useAccountContext()\n    const toast = useToast()\n    const [choseNetwork, setChoseNetwork] = useState(false)\n    const [creatingNew, setCreatingNew] = useState(false)\n    const [loading, setLoading] = useState(false)\n\n    const setAccount = (acc: Account) => {\n        accountCtx.setAccount(acc);\n    }\n\n    const loadAccountFromStorage = useCallback(async () => {\n        if (!accountCtx.account) {\n            const str = localStorage.getItem(\"account\")\n            const json = str ? JSON.parse(str) as Partial<AccountJSON> : null\n            if (json) {\n                const account = new wallet.Account(json)\n                setAccount(account)\n            }\n        }\n    }, [accountCtx])\n\n    useEffect(() => {\n        loadAccountFromStorage()\n    }, [loadAccountFromStorage])\n\n    const login = async (e: React.SyntheticEvent) => {\n        e.preventDefault()\n        setLoading(true)\n        await passwordOnAccount()\n        setLoading(false)\n    }\n\n    const passwordOnAccount = async () => {\n        if (accountCtx.account && accountCtx.accountPassword) {\n            if (!creatingNew) {\n                try {\n                    await accountCtx.account.decrypt(accountCtx.accountPassword)\n                } catch (e: any) {\n                    toast({\n                        title: e.message,\n                        status: \"error\",\n                        duration: 3000,\n                        isClosable: true,\n                    })\n                    return\n                }\n            }\n            accountCtx.setAccountDecripted(true)\n\n            try {\n                await accountCtx.account.encrypt(accountCtx.accountPassword)\n            } catch (e) {\n                console.log(\"error encrypting account\")\n            }\n            await localStorage.setItem(\"account\", JSON.stringify(accountCtx.account.export()))\n        }\n    }\n\n    const importAccount = async () => {\n        const file = await FileHelper.promptForSingleFile(\"json\")\n        const json = await file?.text()\n        if (json) {\n            const acc = JSON.parse(json)\n            const account = new wallet.Account(acc)\n            setAccount(account)\n            setCreatingNew(false)\n        }\n    }\n\n    const createAccount = async () => {\n        const account = new wallet.Account()\n        setAccount(account)\n        setCreatingNew(true)\n    }\n\n    return (\n        <Flex direction=\"column\" align=\"center\" {...props}>\n            <Spacer/>\n            {loading ? <Spinner alignSelf=\"center\" />\n            : !choseNetwork ? <>\n                <Text fontSize=\"0.875rem\" color=\"#888888\">Choose your network</Text>\n                <Text fontSize=\"0.75rem\" mt=\"1.5rem\" w=\"20rem\">Network Type</Text>\n                <Select onChange={(e: any) => accountCtx.setNetworkType(e.target.value)}\n                        value={accountCtx.networkType}\n                        borderColor=\"#373d4a\" borderRadius={0} bg=\"#1a202b\"\n                        mt=\"0.5rem\" w=\"20rem\" color=\"#999999\">\n                    {Object.keys(DEFAULT_NETWORKS).map((key) => (<option value={key} key={key}>{DEFAULT_NETWORKS[key].name}</option>))}\n                </Select>\n                {accountCtx.networkType === 'neo3:private' && <>\n                    <Text fontSize=\"0.75rem\" mt=\"1.5rem\" w=\"20rem\">RPC Address</Text>\n                    <Input onChange={(e: any) => accountCtx.setPrivateRpcAddress(e.target.value)}\n                           value={accountCtx.privateRpcAddress}\n                           borderColor=\"#373d4a\" borderRadius={0} bg=\"#1a202b\"\n                           _placeholder={{color: '#373d4a'}} mt=\"0.5rem\" w=\"20rem\"\n                    />\n                </>}\n                <Button onClick={() => setChoseNetwork(true)} h=\"2.75rem\" mt=\"1.5rem\" bg=\"#373d4a\" borderRadius={0} _hover={{bg: 'black'}}>\n                    Continue</Button>\n            </>\n            : !accountCtx.account ? <>\n                <Text fontSize=\"0.875rem\" color=\"#888888\">Do you have an Account JSON File?</Text>\n                <Flex h=\"2.75rem\" mt=\"1.5rem\">\n                    <Button onClick={importAccount} h=\"100%\" bg=\"#373d4a\" borderRadius={0} _hover={{bg: 'black'}}>\n                        Yes! Import File</Button>\n                    <Button onClick={createAccount} h=\"100%\" bg=\"#373d4a\" borderRadius={0} _hover={{bg: 'black'}}\n                            ml=\"0.5rem\">\n                        No, Generate a new one</Button>\n                </Flex>\n            </> : <Flex>\n                    <Flex as=\"form\" onSubmit={login} direction=\"column\" align=\"center\">\n                        <Text fontSize=\"0.875rem\" color=\"#888888\" fontWeight=\"bold\">{\n                            !creatingNew ? `Login with this Account` : `Create Account`\n                        }</Text>\n                        <Flex align=\"center\" mt=\"0.8rem\">\n                            <Image w=\"1.875rem\" src=\"https://cryptologos.cc/logos/neo-neo-logo.svg\"/>\n                            <Text fontSize=\"0.875rem\" ml=\"0.5rem\">{accountCtx.account.address}</Text>\n                        </Flex>\n                        <Input type={`password`} onChange={(e: any) => accountCtx.setAccountPassword(e.target.value)}\n                               borderColor=\"#373d4a\" borderRadius={0} bg=\"#1a202b\"\n                               _placeholder={{color: '#373d4a'}} mt=\"1rem\"\n                               placeholder={!creatingNew ? `Type your password` : `Type a new password`}\n                        />\n                        <Button type=\"submit\" w=\"6.5rem\" h=\"2.75rem\" bg=\"#373d4a\" borderRadius={0} mt=\"1rem\"\n                                _hover={{bg: 'black'}}>{\n                            !creatingNew ? `Login` : `Create`\n                        }</Button>\n                    </Flex>\n                    <Flex direction=\"column\" align=\"center\" ml=\"2rem\">\n                        <Box flex={1} w=\"1px\" bg=\"#888888\" />\n                        <Text fontSize=\"0.875rem\" color=\"#888888\" my=\"0.5rem\">Or</Text>\n                        <Box flex={1} w=\"1px\" bg=\"#888888\" />\n                    </Flex>\n                    <Flex direction=\"column\" w=\"12rem\" alignSelf=\"center\" ml=\"2rem\">\n                        <Button onClick={importAccount} w=\"100%\" h=\"2.75rem\" bg=\"#373d4a\" borderRadius={0}\n                                _hover={{bg: 'black'}}>{\n                            !creatingNew ? `Import another Account` : `Import an Account`\n                        }</Button>\n                        {!creatingNew &&\n                            <Button onClick={createAccount} w=\"100%\" h=\"2.75rem\" bg=\"#373d4a\" borderRadius={0}\n                                    _hover={{bg: 'black'}} mt=\"0.5rem\">\n                                Generate a new Account\n                            </Button>\n                        }\n                    </Flex>\n                </Flex>}\n            <Spacer/>\n        </Flex>\n    );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport QrReader from \"react-qr-reader\";\n\nconst SScannerContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 5;\n  margin: 0 auto !important;\n  background: rgb(0, 0, 0);\n`;\n\nconst SScannerWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  max-width: 600px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst SCloseButton = styled.div`\n  transition: all 0.2s ease-in-out;\n  width: 25px;\n  height: 25px;\n  position: absolute;\n  z-index: 10;\n  top: 15px;\n  right: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transform: rotate(45deg);\n  &:hover {\n    opacity: 0.5;\n  }\n`;\n\nconst SFirstLine = styled.div`\n  position: absolute;\n  width: 90%;\n  border: 1px solid rgb(255, 255, 255);\n`;\n\nconst SSecondLine = styled(SFirstLine as any)`\n  transform: rotate(90deg);\n`;\n\nexport interface ScannerValidation {\n  error: Error | null;\n  result: any | null;\n}\n\ninterface ScannerProps {\n  onValidate: (data: string) => ScannerValidation;\n  onScan: (data: any) => void;\n  onError: (error: Error) => void;\n  onClose: () => void;\n}\n\ninterface ScannerState {\n  delay: number | false;\n}\n\nclass Scanner extends React.Component<ScannerProps, ScannerState> {\n  public state = {\n    delay: 300,\n  };\n\n  public stopRecording: () => Promise<void> = async () => {\n    await this.setState({ delay: false });\n  };\n\n  public handleScan: (data: (string | null)) => void = (data: string | null) => {\n    if (data) {\n      const { result, error } = this.props.onValidate(data);\n      if (result) {\n        this.stopRecording();\n        this.props.onScan(result);\n      } else {\n        this.handleError(error);\n      }\n    }\n  };\n\n  public handleError: (error: (Error | null)) => void = (error: Error | null) => {\n    if (error) {\n      this.props.onError(error);\n    }\n  };\n\n  public onClose: () => Promise<void> = async () => {\n    try {\n      await this.stopRecording();\n      this.props.onClose();\n    } catch (error: any) {\n      this.handleError(error);\n    }\n  };\n\n  public componentWillUnmount(): void {\n    this.stopRecording();\n  }\n\n  public render(): any {\n    return (\n      <SScannerContainer>\n        <SCloseButton onClick={this.onClose}>\n          <SFirstLine />\n          <SSecondLine />\n        </SCloseButton>\n        <SScannerWrapper>\n          <QrReader\n            delay={this.state.delay}\n            onError={this.handleError}\n            onScan={this.handleScan}\n            style={{ width: \"100%\" }}\n          />\n        </SScannerWrapper>\n      </SScannerContainer>\n    );\n  }\n}\n\nexport default Scanner;\n","import * as React from \"react\";\nimport {Box, Button, DividerProps, Flex, Input, Spacer, Spinner, Text, useToast} from \"@chakra-ui/react\";\nimport {useWalletConnect} from \"../context/WalletConnectContext\";\nimport {useCallback, useEffect, useState} from \"react\";\nimport Scanner, {ScannerValidation} from \"./Scanner\";\n\nexport default function ConnectDapp(props: DividerProps): any {\n  const walletConnectCtx = useWalletConnect()\n  const toast = useToast()\n  const [scanner, setScanner] = useState<boolean>(false)\n  const [loading, setLoading] = useState(false)\n\n  const handleScan = () => {\n    setLoading(true)\n    setScanner(true)\n  }\n\n  const handleInput = async (e: any) => {\n    setLoading(true)\n    try {\n      await walletConnectCtx.onURI(e.target.value)\n    } catch (e) {\n      setLoading(false)\n      toast({\n        title: \"Invalid input\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      })\n    }\n  }\n\n  const onScannerValidate = (data: string) => {\n    const res: ScannerValidation = {error: null, result: null};\n    try {\n      res.result = data;\n    } catch (error: any) {\n      res.error = error;\n    }\n\n    return res;\n  };\n\n  const onScannerScan = async (data: any) => {\n    await walletConnectCtx.onURI(data);\n    setScanner(false)\n  };\n\n  const onScannerError = (error: Error) => {\n    setLoading(false)\n    toast({\n      title: error.message,\n      status: \"error\",\n      duration: 3000,\n      isClosable: true,\n    })\n  };\n\n  const closeScanner = () => {\n    setScanner(false)\n    setLoading(false)\n  }\n\n  useEffect(() => {\n    setLoading(false)\n  }, [walletConnectCtx.sessionProposals.length])\n\n  const handleUnhandledRejection = useCallback((event: PromiseRejectionEvent) => {\n    if (event.reason.message && event.reason.message.includes('No matching pairing')) {\n      setLoading(false)\n      toast({\n        title: \"Expired code\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      })\n      event.preventDefault();\n    }\n  }, [toast])\n\n  useEffect(() => {\n    window.addEventListener(\"unhandledrejection\", handleUnhandledRejection)\n\n    return () => {\n      window.removeEventListener('unhandledrejection', handleUnhandledRejection);\n    };\n  }, [handleUnhandledRejection])\n\n  return (\n    <Flex direction=\"column\" align=\"center\" {...props}>\n      <Spacer/>\n      {loading ? <Spinner mt=\"2rem\"/> : <>\n        <Text fontSize=\"0.875rem\" fontWeight=\"bold\" color=\"#888888\">Connect with an App</Text>\n        <Button h=\"2.75rem\" bg=\"#373d4a\" borderRadius={0} mt=\"1.5rem\"\n                _hover={{bg: 'black'}} onClick={handleScan}>Scan the QRCode</Button>\n        <Flex align=\"center\" mt=\"2rem\" maxW=\"10rem\" w=\"100%\">\n          <Box flex={1} h=\"1px\" bg=\"#888888\"/>\n          <Text fontSize=\"0.875rem\" color=\"#888888\" mx=\"0.5rem\">Or</Text>\n          <Box flex={1} h=\"1px\" bg=\"#888888\"/>\n        </Flex>\n        <Input onChange={handleInput} borderColor=\"#373d4a\" borderRadius={0}\n               maxW=\"20rem\" bg=\"#1a202b\"\n               _placeholder={{color: '#373d4a'}} mt=\"2rem\"\n               placeholder=\"Paste the Code \"/>\n      </>}\n      <Spacer/>\n      {scanner && (\n        <Scanner\n          onValidate={onScannerValidate}\n          onScan={onScannerScan}\n          onError={onScannerError}\n          onClose={closeScanner}\n        />\n      )}\n    </Flex>\n  );\n}\n\n","import Neon, {rpc, sc, tx, wallet, u} from '@cityofzion/neon-js'\nimport {Account} from '@cityofzion/neon-core/lib/wallet'\nimport {ContractParam} from \"@cityofzion/neon-core/lib/sc\";\nimport {WitnessScope} from \"@cityofzion/neon-core/lib/tx/components/WitnessScope\";\nimport {randomBytes} from \"crypto\";\nimport {SessionRequest} from \"../context/WalletConnectContext\";\n\nexport type Signer = {\n  scopes: WitnessScope\n  allowedContracts?: string[]\n  allowedGroups?: string[]\n}\n\nexport type ContractInvocation = {\n  scriptHash: string\n  operation: string\n  args: any[]\n  abortOnFail?: boolean\n}\n\nexport type ContractInvocationMulti = {\n  signers: Signer[]\n  invocations: ContractInvocation[]\n}\n\nexport type SignMessagePayload = {\n  message: string,\n  version: number\n}\n\nexport type SignedMessage = {\n  publicKey: string\n  data: string\n  salt: string\n  messageHex: string\n}\n\nexport class N3Helper {\n  private readonly rpcAddress: string\n  private readonly networkMagic: number\n\n  constructor(rpcAddress: string, networkMagic: number) {\n    this.rpcAddress = rpcAddress\n    this.networkMagic = networkMagic\n  }\n\n  static init = async (rpcAddress: string, networkMagic?: number): Promise<N3Helper> => {\n    return new N3Helper(rpcAddress, networkMagic || (await N3Helper.getMagicOfRpcAddress(rpcAddress)))\n  }\n\n  static getMagicOfRpcAddress = async (rpcAddress: string): Promise<number> => {\n    const resp: any = await new rpc.RPCClient(rpcAddress).execute(Neon.create.query({\n      method: 'getversion',\n      params: [],\n      id: 1,\n      jsonrpc: \"2.0\"\n    }));\n\n    return resp.protocol.network\n  }\n\n  rpcCall = async (account: Account | undefined, sessionRequest: SessionRequest): Promise<any> => {\n    const { params: {request} } = sessionRequest\n    let result: any\n\n    if (request.method === 'invokeFunction') {\n      if (!account) {\n        throw new Error(\"No account\")\n      }\n\n      result = await this.invokeFunction(account, request.params);\n\n    } else if (request.method === 'testInvoke') {\n      if (!account) {\n        throw new Error(\"No account\")\n      }\n\n      result = await this.testInvoke(account, request.params);\n\n    } else if (request.method === 'signMessage') {\n      if (!account) {\n        throw new Error(\"No account\")\n      }\n\n      result = await this.signMessage(account, request.params);\n\n    } else if (request.method === 'verifyMessage') {\n      result = await this.verifyMessage(request.params);\n    } else if (request.method === 'getapplicationlog') {\n\n      result = await new rpc.RPCClient(this.rpcAddress).getApplicationLog(request.params[0])\n\n    } else {\n      throw new Error(\"Invalid Request method\")\n    }\n\n    return {\n      id: sessionRequest.id,\n      jsonrpc: \"2.0\",\n      result\n    }\n  }\n\n  testInvoke = async (account: Account, cim: ContractInvocationMulti): Promise<any> => {\n    const sb = Neon.create.scriptBuilder();\n\n    cim.invocations.forEach((c) => {\n      sb.emitContractCall({\n        scriptHash: c.scriptHash,\n        operation: c.operation,\n        args: N3Helper.convertParams(c.args)\n      })\n\n      if (c.abortOnFail) {\n        sb.emit(0x39)\n      }\n    })\n\n    const script = sb.build()\n    return await new rpc.RPCClient(this.rpcAddress).invokeScript(\n      Neon.u.HexString.fromHex(script), N3Helper.buildMultipleSigner(account, cim.signers))\n  }\n\n  invokeFunction = async (account: Account, cim: ContractInvocationMulti): Promise<any> => {\n    const sb = Neon.create.scriptBuilder();\n\n    cim.invocations.forEach((c) => {\n      sb.emitContractCall({\n        scriptHash: c.scriptHash,\n        operation: c.operation,\n        args: N3Helper.convertParams(c.args)\n      })\n\n      if (c.abortOnFail) {\n        sb.emit(0x39)\n      }\n    })\n\n    const script = sb.build()\n\n    const rpcClient = new rpc.RPCClient(this.rpcAddress)\n\n    const currentHeight = await rpcClient.getBlockCount();\n\n    const trx = new tx.Transaction({\n      script: Neon.u.HexString.fromHex(script),\n      validUntilBlock: currentHeight + 100,\n      signers: N3Helper.buildMultipleSigner(account, cim.signers)\n    })\n\n    await Neon.experimental.txHelpers.addFees(trx, {\n      rpcAddress: this.rpcAddress,\n      networkMagic: this.networkMagic,\n      account\n    })\n\n    trx.sign(account, this.networkMagic)\n\n    return await rpcClient.sendRawTransaction(trx)\n  }\n\n  signMessage = (account: Account, message: string | SignMessagePayload): SignedMessage => {\n    if (typeof message === 'string') {\n      return this.signMessageLegacy(account, message)\n    } else if (message.version === 1) {\n      return this.signMessageLegacy(account, message.message)\n    } else if (message.version === 2) {\n      return this.signMessageNew(account, message.message)\n    } else {\n      throw new Error(\"Invalid signMessage version\")\n    }\n  }\n\n  signMessageLegacy = (account: Account, message: string): SignedMessage => {\n    const salt = randomBytes(16).toString('hex')\n    const parameterHexString = u.str2hexstring(salt + message)\n    const lengthHex = u.num2VarInt(parameterHexString.length / 2)\n    const messageHex = `010001f0${lengthHex}${parameterHexString}0000`\n\n    return {\n      publicKey: account.publicKey,\n      data: wallet.sign(messageHex, account.privateKey),\n      salt,\n      messageHex\n    }\n  }\n\n  signMessageNew = (account: Account, message: string): SignedMessage => {\n    const salt = randomBytes(16).toString('hex')\n    const messageHex = u.str2hexstring(message)\n\n    return {\n      publicKey: account.publicKey,\n      data: wallet.sign(messageHex, account.privateKey, salt),\n      salt,\n      messageHex\n    }\n  }\n\n  verifyMessage = (verifyArgs: SignedMessage): boolean => {\n    return wallet.verify(verifyArgs.messageHex, verifyArgs.data, verifyArgs.publicKey)\n  }\n\n  private static convertParams(args: any[]): ContractParam[] {\n    return args.map(a => (\n      a.value === undefined ? a :\n        a.type === 'Address'\n          ? sc.ContractParam.hash160(a.value)\n          : a.type === 'ScriptHash'\n          ? sc.ContractParam.hash160(Neon.u.HexString.fromHex(a.value))\n          : a.type === 'Array'\n            ? sc.ContractParam.array(...N3Helper.convertParams(a.value))\n            : a\n    ))\n  }\n\n  private static buildSigner(account: Account, signerEntry?: Signer) {\n    const signer = new tx.Signer({\n      account: account.scriptHash\n    })\n\n    signer.scopes = signerEntry?.scopes ?? WitnessScope.CalledByEntry\n    if (signerEntry?.allowedContracts) {\n      signer.allowedContracts = signerEntry.allowedContracts.map((ac) => Neon.u.HexString.fromHex(ac))\n    }\n    if (signerEntry?.allowedGroups) {\n      signer.allowedGroups = signerEntry.allowedGroups.map((ac) => Neon.u.HexString.fromHex(ac))\n    }\n\n    return signer\n  }\n\n  private static buildMultipleSigner(account: Account, signers: Signer[]) {\n    return !signers?.length ? [N3Helper.buildSigner(account)] : signers.map((s) => N3Helper.buildSigner(account, s))\n  }\n\n  private static convertError(e) {\n    return {error: {message: e.message, ...e}};\n  }\n}\n","import * as React from \"react\";\nimport DefaultCard from \"./components/DefaultCard\";\nimport RequestCard from \"./components/RequestCard\";\nimport ProposalCard from \"./components/ProposalCard\";\nimport {SessionRequest, useWalletConnect} from \"./context/WalletConnectContext\";\nimport {CloseButton, Flex, Spacer, Spinner} from \"@chakra-ui/react\";\nimport Header from \"./components/Header\";\nimport {useAccountContext} from \"./context/AccountContext\";\nimport AccountEntry from \"./components/AccountEntry\";\nimport {useEffect, useState} from \"react\";\nimport ConnectDapp from \"./components/ConnectDapp\";\nimport {N3Helper} from \"./helpers/N3Helper\";\nimport {DEFAULT_AUTOACCEPT_METHODS, DEFAULT_NETWORKS} from \"./constants\";\n\nexport default function App(): any {\n  const walletConnectCtx = useWalletConnect()\n  const accountCtx = useAccountContext()\n  const [connectingApp, setConnectingApp] = useState(false)\n  const [requestOpen, setRequestOpen] = useState<SessionRequest | undefined>(undefined)\n\n  useEffect(() => {\n    setConnectingApp(!walletConnectCtx.sessions.length)\n  }, [walletConnectCtx.sessions])\n\n  useEffect(() => {\n    // if the request method is 'testInvoke' or 'multiTestInvoke' we auto-accept it\n    walletConnectCtx.autoAcceptIntercept((acc, chain, req: SessionRequest) =>\n      DEFAULT_AUTOACCEPT_METHODS.includes(req.params.request.method))\n\n    walletConnectCtx.onRequestListener(async (acc, chain, req: SessionRequest) =>\n      await (await N3Helper.init(DEFAULT_NETWORKS[chain].url || accountCtx.privateRpcAddress)).rpcCall(accountCtx.account, req))\n  }, [accountCtx.account, accountCtx.privateRpcAddress])\n\n  return (\n    <Flex direction=\"column\" w=\"100vw\" minH=\"100vh\" bgImage=\"url(/bg.png)\" color=\"white\">\n      <Header/>\n      {\n        !accountCtx.account || !accountCtx.accountDecripted ?\n          <AccountEntry flex={1}/>\n          : !walletConnectCtx.initialized ?\n          <Flex flex={1} align=\"center\">\n            <Spacer/>\n            <Spinner/>\n            <Spacer/>\n          </Flex>\n          : walletConnectCtx.sessionProposals.length ?\n            <ProposalCard flex={1}/>\n            : requestOpen ?\n              <RequestCard requestEvent={requestOpen} closeRequest={() => setRequestOpen(undefined)} flex={1}/>\n              : connectingApp ?\n                <Flex flex={1}>\n                  <ConnectDapp flex={1}/>\n                  {!!walletConnectCtx.sessions.length && <CloseButton onClick={() => setConnectingApp(false)}/>}\n                </Flex>\n                :\n                <DefaultCard openRequest={(e) => setRequestOpen(e)} openConnectingDapp={() => setConnectingApp(true)}/>\n      }\n    </Flex>\n  );\n}\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {ChakraProvider} from \"@chakra-ui/react\"\nimport {\n  DEFAULT_APP_METADATA,\n  DEFAULT_LOGGER,\n  DEFAULT_RELAY_PROVIDER,\n  DEFAULT_PROJECT_ID,\n} from \"./constants\";\nimport App from \"./App\";\nimport {WalletConnectContextProvider} from \"./context/WalletConnectContext\";\nimport {AccountContextProvider} from \"./context/AccountContext\";\n\nconst wcOptions = {\n  appMetadata: DEFAULT_APP_METADATA,\n  logger: DEFAULT_LOGGER,\n  relayServer: DEFAULT_RELAY_PROVIDER,\n  projectId: DEFAULT_PROJECT_ID\n}\n\nReactDOM.render(\n    <>\n        <ChakraProvider>\n            <WalletConnectContextProvider options={wcOptions}>\n                <AccountContextProvider>\n                    <App/>\n                </AccountContextProvider>\n            </WalletConnectContextProvider>\n        </ChakraProvider>\n    </>,\n    document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}